if [[ -n "$ZSH_VERSION" ]]; then
  autoload bashcompinit
  bashcompinit
fi

_todo ()
{
  local cur prev firstword lastword complete_words complete_options

  # Don't break words at : and =, see [1] and [2]
  COMP_WORDBREAKS=${COMP_WORDBREAKS//[:=]}

  cur=${COMP_WORDS[COMP_CWORD]}
  prev=${COMP_WORDS[COMP_CWORD-1]}
  firstword=$(_todo_get_firstword)
  lastword=$(_todo_get_lastword)

  GLOBAL_COMMANDS="\
    new\
    edit\
    archive\
    view\
    browse\
    show\
    git"

  GIT_COMMANDS="\
    update\
    fetch\
    push"

  case $firstword in
    git)
      case "${lastword}" in
        *)
          if [[ "${lastword}" =~ ^update\|fetch\|push$ ]]; then
            complete_words=""
          else
            complete_words="$GIT_COMMANDS"
          fi
          ;;
      esac
      ;;

    *)
      if [[ "${lastword}" =~ ^new\|edit\|archive\|view\|browse\|show\|git$ ]]; then
        complete_words=""
      else
        complete_words="$GLOBAL_COMMANDS"
      fi
      ;;
  esac

  COMPREPLY=( $( compgen -W "$complete_words" -- $cur ))
  return 0
}

# Determines the first non-option word of the command line. This
# is usually the command
_todo_get_firstword() {
  local firstword i

  firstword=
  for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
    if [[ ${COMP_WORDS[i]} != -* ]]; then
      firstword=${COMP_WORDS[i]}
      break
    fi
  done

  echo $firstword
}

# Determines the last non-option word of the command line. This
# is usally a sub-command
_todo_get_lastword() {
  local lastword i

  lastword=
  for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
    if [[ ${COMP_WORDS[i]} != -* ]] && [[ -n ${COMP_WORDS[i]} ]] && [[ ${COMP_WORDS[i]} != $cur ]]; then
      lastword=${COMP_WORDS[i]}
    fi
  done

  echo $lastword
}

complete -F _todo to-do
